{"version":3,"file":"static/js/902.0b91be6b.chunk.js","mappings":"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","sources":["pages/Register/Register.styled.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const RegisterGroup = styled.section`\n    min-height: 100%;\n    margin: 0;\n    padding: 16px 16px;\n    text-align: center;\n    background: lavender;\n    color: chocolate;\n\n    @media screen and (min-width: 768px) {\n        & {\n            padding: 16px 40px;\n        };\n    }\n`;\n\nexport const RegisterTitle = styled.h2`\n    margin: 0 0 8px 0;\n    font-size: ${props => props.theme.spacing(3)};\n    font-weight: 500;\n    line-height: 1.5;\n`;\n\nexport const Form = styled.form`\n    width: 288px;\n    margin-right: auto;\n    margin-left: auto;\n    margin-bottom: 16px;\n\n    @media screen and (min-width: 768px) {\n        & {\n            width: 400px;\n            padding: 8px;\n        };\n    }\n`;\n\nexport const LabelField = styled.label`\n    display: block;\n    margin-bottom: 16px;\n    font-size: ${props => props.theme.spacing(2)};\n    font-weight: 500;\n    line-height: 1.2;\n\n    @media screen and (min-width: 768px) {\n        & {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n        };\n    }\n`;\n\nexport const InputField = styled.input`\n    width: 262px;\n    margin-top: 8px;\n    padding: 12px;\n    font-size: ${props => props.theme.spacing(2)};\n    line-height: 1.2;\n    border: 1px solid chocolate;\n    border-radius: ${props => props.theme.spacing(1)};\n    cursor: pointer;\n\n    @media screen and (min-width: 768px) {\n        & {\n            width: 284px;\n        };\n    }\n`;\n\nexport const ButtonAdding = styled.button`\n/* toggle password */\n    /* display: block;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: ${props => props.theme.spacing(2)}; */\n/* toggle password */\n    padding: 8px 24px;\n    font-size: ${props => props.theme.spacing(2)};\n    font-weight: 700;\n    line-height: 1.2;\n    border: 1px solid chocolate;\n    border-radius: ${props => props.theme.spacing(1)};\n    cursor: pointer;\n    background: burlywood;\n    color: honeydew;\n    transition: background-color 0.25s ease-in-out, color 0.25s ease-in-out, border-color 0.25s ease-in-out, transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n        background: chocolate;\n        color: springgreen;\n        border: 1px solid springgreen;\n        transform: scale(1.1);\n    }\n`;","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { authOperations } from \"redux/auth/auth-operations\";\nimport {\n    RegisterGroup,\n    RegisterTitle,\n    Form,\n    LabelField,\n    InputField,\n    ButtonAdding,\n} from \"./Register.styled\";\n\nconst RegisterPage = () => {\n    const dispatch = useDispatch();\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    // const [isPassword, setIsPassword] = useState(true);\n\n    const handleInputChange = ({ target: { name, value }}) => {\n        switch (name) {\n            case 'name':\n                return setName(value);\n            case 'email':\n                return setEmail(value);\n            case 'password':\n                return setPassword(value);\n            \n            default:\n                return;\n        }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        \n        dispatch(authOperations.register({ name, email, password }));\n\n        setName('');\n        setEmail('');\n        setPassword('');\n    }\n\n    return (\n        <main style={{height: \"100%\"}}>\n            <RegisterGroup>\n                <RegisterTitle>Please Sign in Your Phonebook</RegisterTitle>\n\n                <Form onSubmit={handleSubmit}>\n                    <LabelField>\n                        Name\n                        <InputField\n                            type=\"text\"\n                            name=\"name\"\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                            required\n                            autoComplete=\"off\"\n                            placeholder=\"Name\"\n                            value={name}\n                            onChange={handleInputChange}\n                        />\n                    </LabelField>\n\n                    <LabelField>\n                        Email\n                        <InputField\n                            type=\"email\"\n                            name=\"email\"\n                            required\n                            autoComplete=\"off\"\n                            placeholder=\"name@email.com\"\n                            value={email}\n                            onChange={handleInputChange}\n                        />\n                    </LabelField>\n\n                    <LabelField>\n                        Password\n                        <InputField\n                            // type={isPassword ? \"password\" : \"text\"}\n                            type=\"password\"\n                            name=\"password\"\n                            required\n                            autoComplete=\"off\"\n                            placeholder=\"Name123456\"\n                            value={password}\n                            onChange={handleInputChange}\n                        />\n                    </LabelField>\n\n                    {/* <ButtonAdding type=\"button\" onClick={() => setIsPassword(prev => !prev)}>Show Password</ButtonAdding> */}\n                    <ButtonAdding type=\"submit\">Sign In</ButtonAdding>\n                </Form>\n            </RegisterGroup>\n        </main>\n    )\n}\n\nexport default RegisterPage;"],"names":["RegisterGroup","styled","_templateObject","_taggedTemplateLiteral","RegisterTitle","_templateObject2","props","theme","spacing","Form","_templateObject3","LabelField","_templateObject4","InputField","_templateObject5","ButtonAdding","_templateObject6","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","handleInputChange","_ref","_ref$target","target","value","_jsx","style","height","children","_jsxs","onSubmit","event","preventDefault","authOperations","type","pattern","title","required","autoComplete","placeholder","onChange"],"sourceRoot":""}
{"version":3,"file":"static/js/172.a36d5f9c.chunk.js","mappings":"+PAEaA,EAAgBC,EAAAA,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gOAe9BC,EAAgBH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6FAEvB,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAE,IAKjCC,EAAOR,EAAAA,GAAAA,KAAWS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,2MAclBQ,EAAaV,EAAAA,GAAAA,MAAYW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,4QAGvB,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAE,IAajCK,EAAaZ,EAAAA,GAAAA,MAAYa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,sQAIvB,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAE,IAG3B,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAE,IAUrCO,EAAed,EAAAA,GAAAA,OAAae,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,ouBAKpB,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAE,IAGrC,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAE,IAI3B,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAE,I,UCHlD,EApEkB,WACd,IAAMS,GAAWC,EAAAA,EAAAA,MACjBC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAGtBG,EAAoB,SAAHC,GAAoC,IAADC,EAAAD,EAA7BE,OAAUC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACzC,OAAQD,GACJ,IAAK,QACD,OAAOT,EAASU,GACpB,IAAK,WACD,OAAON,EAAYM,GAEvB,QACI,OAEZ,EAWA,OACIC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAACC,OAAQ,QAAQC,UAC1BC,EAAAA,EAAAA,MAACvC,EAAa,CAAAsC,SAAA,EACVH,EAAAA,EAAAA,KAAC/B,EAAa,CAAAkC,SAAC,2BAEfC,EAAAA,EAAAA,MAAC9B,EAAI,CAAC+B,SAdG,SAACC,GAClBA,EAAMC,iBAENzB,EAAS0B,EAAAA,EAAAA,MAAqB,CAAEpB,MAAAA,EAAOI,SAAAA,KAEvCH,EAAS,IACTI,EAAY,GAChB,EAOyCU,SAAA,EACzBC,EAAAA,EAAAA,MAAC5B,EAAU,CAAA2B,SAAA,CAAC,SAERH,EAAAA,EAAAA,KAACtB,EAAU,CACP+B,KAAK,QACLX,KAAK,QACLY,UAAQ,EACRC,aAAa,KACbC,YAAY,iBACZb,MAAOX,EACPyB,SAAUnB,QAIlBU,EAAAA,EAAAA,MAAC5B,EAAU,CAAA2B,SAAA,CAAC,YAERH,EAAAA,EAAAA,KAACtB,EACG,CACA+B,KAAK,WACLX,KAAK,WACLY,UAAQ,EACRC,aAAa,MACbC,YAAY,aACZb,MAAOP,EACPqB,SAAUnB,QAKlBM,EAAAA,EAAAA,KAACpB,EAAY,CAAC6B,KAAK,SAAQN,SAAC,kBAKhD,C","sources":["pages/Login/Login.styled.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const RegisterGroup = styled.section`\n  min-height: 100%;\n  margin: 0;\n  padding: 16px 16px;\n  text-align: center;\n  background: #ececf3;\n  color: black;\n\n  @media screen and (min-width: 768px) {\n    & {\n      padding: 16px 40px;\n    }\n  }\n`;\n\nexport const RegisterTitle = styled.h2`\n  margin: 0 0 8px 0;\n  font-size: ${props => props.theme.spacing(3)};\n  font-weight: 500;\n  line-height: 1.5;\n`;\n\nexport const Form = styled.form`\n  width: 288px;\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    & {\n      width: 400px;\n      padding: 8px;\n    }\n  }\n`;\n\nexport const LabelField = styled.label`\n  display: block;\n  margin-bottom: 16px;\n  font-size: ${props => props.theme.spacing(2)};\n  font-weight: 500;\n  line-height: 1.2;\n\n  @media screen and (min-width: 768px) {\n    & {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n  }\n`;\n\nexport const InputField = styled.input`\n  width: 262px;\n  margin-top: 8px;\n  padding: 12px;\n  font-size: ${props => props.theme.spacing(2)};\n  line-height: 1.2;\n  border: 1px solid black;\n  border-radius: ${props => props.theme.spacing(1)};\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    & {\n      width: 284px;\n    }\n  }\n`;\n\nexport const ButtonAdding = styled.button`\n  /* toggle password */\n  /* display: block;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: ${props => props.theme.spacing(2)}; */\n  /* toggle password */\n  padding: 8px 24px;\n  font-size: ${props => props.theme.spacing(2)};\n  font-weight: 700;\n  line-height: 1.2;\n  border: 1px solid black;\n  border-radius: ${props => props.theme.spacing(1)};\n  cursor: pointer;\n  background: #8e8e99;\n  color: honeydew;\n  transition: background-color 0.25s ease-in-out, color 0.25s ease-in-out,\n    border-color 0.25s ease-in-out, transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    box-shadow: 0 14px 28px rgba(6, 2, 4, 0.25), 0 10px 10px rgba(3, 5, 8, 0.22);\n\n  &:hover,\n  &:focus {\n    background: honeydew;\n    color: #3e3e40;\n    border: 1px solid #1d1de3;\n    transform: scale(1.1);\n    \n`;\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { authOperations } from \"redux/auth/auth-operations\";\nimport {\n    RegisterGroup,\n    RegisterTitle,\n    Form,\n    LabelField,\n    InputField,\n    ButtonAdding,\n} from \"./Login.styled\";\n\nconst LoginPage = () => {\n    const dispatch = useDispatch();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    // const [isPassword, setIsPassword] = useState(true);\n\n    const handleInputChange = ({ target: { name, value }}) => {\n        switch (name) {\n            case 'email':\n                return setEmail(value);\n            case 'password':\n                return setPassword(value);\n            \n            default:\n                return;\n        }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        dispatch(authOperations.logIn({ email, password }));\n\n        setEmail('');\n        setPassword('');\n    }\n\n    return (\n        <main style={{height: \"100%\"}}>\n            <RegisterGroup>\n                <RegisterTitle>Log in Your Phonebook</RegisterTitle>\n\n                <Form onSubmit={handleSubmit}>\n                    <LabelField>\n                        Email\n                        <InputField\n                            type=\"email\"\n                            name=\"email\"\n                            required\n                            autoComplete=\"on\"\n                            placeholder=\"name@email.com\"\n                            value={email}\n                            onChange={handleInputChange}\n                        />\n                    </LabelField>\n\n                    <LabelField>\n                        Password\n                        <InputField\n                            // type={isPassword ? \"password\" : \"text\"}\n                            type=\"password\"\n                            name=\"password\"\n                            required\n                            autoComplete=\"off\"\n                            placeholder=\"Name123456\"\n                            value={password}\n                            onChange={handleInputChange}\n                        />\n                    </LabelField>\n\n                    {/* <ButtonAdding type=\"button\" onClick={() => setIsPassword(prev => !prev)}>Show Password</ButtonAdding> */}\n                    <ButtonAdding type=\"submit\">Log in</ButtonAdding>\n                </Form>\n            </RegisterGroup>\n        </main>\n    )\n}\n\nexport default LoginPage;"],"names":["RegisterGroup","styled","_templateObject","_taggedTemplateLiteral","RegisterTitle","_templateObject2","props","theme","spacing","Form","_templateObject3","LabelField","_templateObject4","InputField","_templateObject5","ButtonAdding","_templateObject6","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","handleInputChange","_ref","_ref$target","target","name","value","_jsx","style","height","children","_jsxs","onSubmit","event","preventDefault","authOperations","type","required","autoComplete","placeholder","onChange"],"sourceRoot":""}
{"version":3,"file":"static/js/813.fa6a570a.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectFilter = state => state.filter;","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 400px;\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 16px;\n  padding: 8px;\n`;\n\nexport const LabelField = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n  font-size: ${props => props.theme.spacing(2)};\n  font-weight: 500;\n  line-height: 1.2;\n`;\n\nexport const InputField = styled.input`\n  padding: 16px;\n  font-size: ${props => props.theme.spacing(2)};\n  line-height: 1.2;\n  border: 1px solid #27272a;\n  border-radius: ${props => props.theme.spacing(1)};\n  width: 292px;\n  cursor: pointer;\n`;\n\nexport const ButtonAdding = styled.button`\n  padding: 8px 24px;\n  font-size: ${props => props.theme.spacing(2)};\n  font-weight: 700;\n  line-height: 1.2;\n  border: 1px solid black;\n  border-radius: ${props => props.theme.spacing(1)};\n  cursor: pointer;\n  background: #8e8e99;\n  color: honeydew;\n  transition: background-color 0.25s ease-in-out, color 0.25s ease-in-out,\n    border-color 0.25s ease-in-out;\n  box-shadow: 0 14px 28px rgba(6, 2, 4, 0.25), 0 10px 10px rgba(3, 5, 8, 0.22);\n\n  &:hover,\n  &:focus {\n    background: #b5b5ec;\n    color: #3e3e40;\n    border: 1px solid #1d1de3;\n  }\n`;\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { nanoid } from \"nanoid\";\nimport { selectContacts } from \"redux/contacts/selectors\";\nimport * as contactsOperations from \"redux/contacts/contactsOperations\";\nimport { Form, LabelField, InputField, ButtonAdding } from \"./ContactForm.styled\";\n\nconst ContactForm = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const contacts = useSelector(selectContacts);\n    const dispatch = useDispatch();\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.currentTarget;\n\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default:\n                return;\n        }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        const newContact = {\n            id: nanoid(),\n            name,\n            number,\n        };\n\n        const isContactNameInList = contactName => {\n            return contacts.find(contact => contact.name === contactName);\n        }\n        \n        if (isContactNameInList(name)) {\n            alert(`${name} is already in contacts.`);\n            return;\n        };\n\n        dispatch(contactsOperations.addContact(newContact));\n\n        setName('');\n        setNumber('');\n    }\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <LabelField>\n                Name\n                <InputField\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    autoComplete=\"off\"\n                    value={name}\n                    onChange={handleInputChange}\n                />\n            </LabelField>\n\n            <LabelField>\n                Number\n                <InputField\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    autoComplete=\"off\"\n                    value={number}\n                    onChange={handleInputChange}\n                />\n            </LabelField>\n\n            <ButtonAdding type=\"submit\">Add contact</ButtonAdding>\n        </Form>\n    )\n}\n\nexport default ContactForm;","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 400px;\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 8px;\n  font-size: ${props => props.theme.spacing(2)};\n  font-weight: 500;\n  line-height: 1.2;\n`;\n\nexport const FilterInput = styled.input`\n  padding: 8px;\n  font-size: ${props => props.theme.spacing(2)};\n  line-height: 1.2;\n  border: 1px solid #1d1de3;\n  border-radius: ${props => props.theme.spacing(1)};\n  width: 196px;\n  cursor: pointer;\n`;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { selectFilter } from \"redux/contacts/selectors\";\nimport { filterList } from \"redux/contacts/filterSlice\";\nimport { FilterLabel, FilterInput } from \"./Filter.styled\";\n\nconst Filter = () => {\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    return (\n        <FilterLabel>\n            Find contacts by name\n            <FilterInput\n                type=\"text\"\n                value={filter}\n                onChange={event => dispatch(filterList(event.currentTarget.value))}\n            />\n        </FilterLabel>\n    )\n}\n\nexport default Filter;","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  width: 400px;\n  margin: 0 auto;\n  padding: 8px;\n  text-align: start;\n  list-style: none;\n`;\n","import styled from 'styled-components';\nimport { RiDeleteBin6Line } from 'react-icons/ri';\n\nexport const ContactsItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  &:not(:last-child) {\n    margin-bottom: ${props => props.theme.spacing(1)};\n  }\n`;\n\nexport const ContactName = styled.p`\n  margin: 0;\n  font-size: ${props => props.theme.spacing(2)};\n  line-height: 1.5;\n`;\n\nexport const ButtonDeleting = styled.button`\n  padding: 4px 24px;\n  font-size: ${props => props.theme.spacing(2)};\n  font-weight: 500;\n  line-height: 1.2;\n  border: 1px solid black;\n  border-radius: ${props => props.theme.spacing(1)};\n  cursor: pointer;\n  background: #e91e63;\n  color: honeydew;\n  transition: background-color 0.25s ease-in-out, color 0.25s ease-in-out,\n    border-color 0.25s ease-in-out;\n\n  &:hover,\n  &:focus {\n    background: #1d1de3;\n    color: black;\n    border: 1px solid #1d1de3;\n  }\n`;\n\nexport const DeleteIcon = styled(RiDeleteBin6Line)`\n  cursor: pointer;\n  color: chocolate;\n  transition: color 0.25s ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: darkslateblue;\n  }\n\n  @media screen and (min-width: 768px) {\n    & {\n      display: none;\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from \"react-redux\";\nimport * as contactsOperations from \"redux/contacts/contactsOperations\";\nimport {\n    ContactsItem,\n    ContactName,\n    ButtonDeleting,\n    DeleteIcon,\n} from \"./ContactItem.styled\";\n\nexport default function ContactItem({ id, name, number }) {\n    const dispatch = useDispatch();\n\n    return (\n        <ContactsItem>\n            <ContactName>{name}: {number}</ContactName>\n            <DeleteIcon size={24} onClick={() => dispatch(contactsOperations.deleteContact(id))}/>\n            <ButtonDeleting type=\"button\" onClick={() => dispatch(contactsOperations.deleteContact(id))}>Delete</ButtonDeleting>\n        </ContactsItem>\n    )\n}\n\nContactItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n}","import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectContacts, selectFilter } from \"redux/contacts/selectors\";\nimport { ContactsList } from \"./ContactList.styled\";\nimport * as contactsOperations from \"redux/contacts/contactsOperations\";\nimport ContactItem from '../ContactItem/ContactItem';\n\nexport default function ContactList() {\n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(contactsOperations.fetchContacts())\n    }, [dispatch])\n    \n    const getFilteredContacts = () => {\n        const normalizedFilter = filter.toLowerCase();\n        \n        return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n    }\n    \n    const filteredContacts = getFilteredContacts();\n\n    return (\n        <ContactsList>\n            {filteredContacts.map(({ id, name, number }) => (\n                <ContactItem\n                    key={id}\n                    id={id}\n                    name={name}\n                    number={number}\n                />\n            ))}\n        </ContactsList>\n    )\n}\n","import styled from 'styled-components';\n\nexport const ContactsGroup = styled.section`\n    min-height: 100%;\n    margin: 0;\n    padding: 16px 16px;\n    text-align: center;\n    background: lavender;\n    color: chocolate;\n\n    @media screen and (min-width: 768px) {\n        & {\n            padding: 16px 40px;\n        };\n    }\n`;\n\nexport const AppTitle = styled.h1`\n    margin: 0 0 16px 0;\n    font-size: ${props => props.theme.spacing(4)};\n    font-weight: 700;\n    line-height: 1.5;\n`;\n\nexport const ContactsTitle = styled.h2`\n    margin: 0 0 8px 0;\n    font-size: ${props => props.theme.spacing(3)};\n    font-weight: 500;\n    line-height: 1.5;\n`;","import ContactForm from \"components/ContactForm/ContactForm\";\nimport Filter from \"components/Filter/Filter\";\nimport ContactList from \"components/ContactList/ContactList\";\nimport Loader from \"components/Loader/Loader\";\nimport { selectIsLoading} from \"redux/contacts/selectors\";\nimport { useSelector } from \"react-redux\";\nimport {\n    ContactsGroup,\n    AppTitle,\n    ContactsTitle,\n} from \"./Contacts.styled\";\n\nconst ContactsPage = () => {\n    const isLoading = useSelector(selectIsLoading);\n\n    return (\n        <main style={{height: \"100%\"}}>\n            <ContactsGroup>\n                <AppTitle>Phonebook</AppTitle>\n                <ContactForm />\n                <ContactsTitle>Contacts</ContactsTitle>\n                <Filter />\n                {isLoading && <Loader />}\n                <ContactList />\n            </ContactsGroup>\n        </main>\n    )\n}\n\nexport default ContactsPage;"],"names":["nanoid","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","Form","styled","_templateObject","_taggedTemplateLiteral","LabelField","_templateObject2","props","theme","spacing","InputField","_templateObject3","ButtonAdding","_templateObject4","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","useSelector","dispatch","useDispatch","handleInputChange","event","_event$currentTarget","currentTarget","value","_jsxs","onSubmit","preventDefault","contactName","newContact","find","contact","alert","concat","contactsOperations","children","_jsx","type","pattern","title","required","autoComplete","onChange","FilterLabel","FilterInput","filterList","ContactsList","ContactsItem","ContactName","ButtonDeleting","DeleteIcon","RiDeleteBin6Line","ContactItem","_ref","onClick","ContactList","useEffect","filteredContacts","normalizedFilter","toLowerCase","includes","getFilteredContacts","map","ContactsGroup","AppTitle","ContactsTitle","style","height","ContactForm","Filter","Loader"],"sourceRoot":""}